import{p as H,r as R,c as d}from"./index-CNtIdQN-.js";const A=["new","learning","review","suspended","mastered"],C=["remember","not-remember"];class o{constructor({wordId:r="",reviewCount:s=0,successCount:u=0,failureCount:v=0,currentInterval:h=1,easeFactor:g=2.5,lastReviewDate:f=null,nextReviewDate:y=null,lastResult:w=null,status:D="new",reviewHistory:S=[],createdAt:p=new Date,updatedAt:m=new Date}={}){this.wordId=r,this.reviewCount=s,this.successCount=u,this.failureCount=v,this.currentInterval=h,this.easeFactor=g,this.lastReviewDate=f,this.nextReviewDate=y,this.lastResult=w,this.status=D,this.reviewHistory=Array.isArray(S)?S:[],this.createdAt=p,this.updatedAt=m,this.validate()}validate(){const r=[];if((!this.wordId||this.wordId.trim().length===0)&&r.push("WordId is required"),this.reviewCount<0&&r.push("Review count cannot be negative"),(this.successCount<0||this.failureCount<0)&&r.push("Success and failure counts cannot be negative"),this.successCount+this.failureCount>this.reviewCount&&r.push("Success + failure count cannot exceed total review count"),this.currentInterval<0&&r.push("Current interval cannot be negative"),(this.easeFactor<1.3||this.easeFactor>2.5)&&r.push("Ease factor must be between 1.3 and 2.5"),A.includes(this.status)||r.push(`Status must be one of: ${A.join(", ")}`),this.lastResult&&!C.includes(this.lastResult)&&r.push(`Last result must be one of: ${C.join(", ")}`),this.lastReviewDate&&this.nextReviewDate&&this.nextReviewDate<this.lastReviewDate&&r.push("Next review date cannot be before last review date"),r.length>0)throw new Error(`ProgressEntry validation failed: ${r.join("; ")}`)}get successRate(){return this.reviewCount>0?this.successCount/this.reviewCount:0}get isDue(){return this.nextReviewDate?new Date>=this.nextReviewDate:this.status==="new"}get daysSinceLastReview(){return this.lastReviewDate?Math.floor((Date.now()-this.lastReviewDate.getTime())/(1e3*60*60*24)):null}get difficulty(){return this.status==="new"?"new":this.reviewHistory.slice(-3).some(u=>u.result==="not-remember")||this.currentInterval<=3?"hard":this.currentInterval<=7?"medium":"easy"}recordReview(r,s=0){const u={timestamp:new Date,result:r,responseTime:s,intervalBefore:this.currentInterval,easeFactorBefore:this.easeFactor};return this.reviewCount++,r==="remember"?this.successCount++:this.failureCount++,this.reviewHistory.push(u),this.reviewHistory.length>10&&(this.reviewHistory=this.reviewHistory.slice(-10)),this.lastResult=r,this.lastReviewDate=new Date,this.updatedAt=new Date,this.calculateNextReview(r),this.updateStatus(),this}calculateNextReview(r){if(r==="not-remember")this.currentInterval=1,this.easeFactor=Math.max(1.3,this.easeFactor-.2);else{this.reviewCount===1?this.currentInterval=1:this.reviewCount===2?this.currentInterval=6:this.currentInterval=Math.round(this.currentInterval*this.easeFactor);const u=this.calculateQuality();this.easeFactor=this.easeFactor+(.1-(5-u)*(.08+(5-u)*.02)),this.easeFactor=Math.max(1.3,Math.min(2.5,this.easeFactor))}const s=new Date;return s.setDate(s.getDate()+this.currentInterval),this.nextReviewDate=s,this}calculateQuality(){const r=this.reviewHistory.slice(-3);if(r.length===0)return 3;const s=r.filter(u=>u.result==="remember").length/r.length;return s>=1?5:s>=.8?4:s>=.6?3:s>=.4?2:1}updateStatus(){return this.reviewCount===0?this.status="new":this.currentInterval<7?this.status="learning":this.currentInterval>=21&&this.successRate>.8?this.status="mastered":this.status="review",this}scheduleRetry(r=10){const s=new Date;return s.setMinutes(s.getMinutes()+r),this.retryScheduledAt=s,this.updatedAt=new Date,this}isRetryReady(){return this.retryScheduledAt?new Date>=this.retryScheduledAt:!1}clearRetry(){return delete this.retryScheduledAt,this.updatedAt=new Date,this}toJSON(){var r,s,u;return{wordId:this.wordId,reviewCount:this.reviewCount,successCount:this.successCount,failureCount:this.failureCount,currentInterval:this.currentInterval,easeFactor:this.easeFactor,lastReviewDate:((r=this.lastReviewDate)==null?void 0:r.toISOString())||null,nextReviewDate:((s=this.nextReviewDate)==null?void 0:s.toISOString())||null,lastResult:this.lastResult,status:this.status,reviewHistory:this.reviewHistory,retryScheduledAt:((u=this.retryScheduledAt)==null?void 0:u.toISOString())||null,createdAt:this.createdAt.toISOString(),updatedAt:this.updatedAt.toISOString(),successRate:this.successRate,difficulty:this.difficulty,isDue:this.isDue}}static fromJSON(r){return new o({...r,lastReviewDate:r.lastReviewDate?new Date(r.lastReviewDate):null,nextReviewDate:r.nextReviewDate?new Date(r.nextReviewDate):null,retryScheduledAt:r.retryScheduledAt?new Date(r.retryScheduledAt):void 0,createdAt:new Date(r.createdAt),updatedAt:new Date(r.updatedAt)})}static createNew(r){return new o({wordId:r})}static createFromReview(r,s,u=0){return new o({wordId:r}).recordReview(s,u)}}const L=Object.freeze(Object.defineProperty({__proto__:null,ProgressEntry:o,RESULT_TYPES:C,REVIEW_STATUS:A},Symbol.toStringTag,{value:"Module"})),$=H("progress",()=>{const a=R(new Map),r=R(new Map),s=R({currentStreak:0,longestStreak:0,lastStudyDate:null}),u=d(()=>e=>a.value.get(e)||null),v=d(()=>e=>Array.from(a.value.values()).filter(t=>t.difficulty===e).map(t=>t.wordId)),h=d(()=>Array.from(a.value.values()).filter(e=>e.isDue).sort((e,t)=>e.nextReviewDate&&t.nextReviewDate?e.nextReviewDate-t.nextReviewDate:e.status==="new"?-1:1)),g=d(()=>Array.from(a.value.values()).filter(e=>e.retryScheduledAt&&e.isRetryReady()).map(e=>({wordId:e.wordId,scheduledFor:e.retryScheduledAt,remainingTime:Math.max(0,Math.floor((e.retryScheduledAt-new Date)/1e3))}))),f=d(()=>{const e=new Date().toISOString().split("T")[0];return r.value.get(e)||{date:e,cardsStudied:0,newCards:0,reviewCards:0,rememberedCards:0,forgottenCards:0,timeSpent:0,averageResponseTime:0}}),y=d(()=>{const e=Array.from(a.value.values());return{totalWords:e.length,newWords:e.filter(t=>t.status==="new").length,learningWords:e.filter(t=>t.status==="learning").length,reviewWords:e.filter(t=>t.status==="review").length,masteredWords:e.filter(t=>t.status==="mastered").length,dueForReview:h.value.length,averageSuccessRate:e.length>0?e.reduce((t,i)=>t+i.successRate,0)/e.length:0}});function w(e){if(!a.value.has(e)){const t=o.createNew(e);return a.value.set(e,t),c(),t}return a.value.get(e)}function D(e,t,i=0){let n=a.value.get(e);return n||(n=w(e)),n.recordReview(t,i),a.value.set(e,n),b(t,i,n.status==="new"),F(),c(),{success:!0,progress:n,nextReview:{scheduledFor:n.nextReviewDate,interval:n.currentInterval}}}function S(e,t=10){const i=a.value.get(e);return i?(i.scheduleRetry(t),a.value.set(e,i),c(),{success:!0,retryIn:t,availableAt:i.retryScheduledAt}):{success:!1,error:"Word not found"}}function p(e){const t=a.value.get(e);return t?(t.clearRetry(),a.value.set(e,t),c(),{success:!0}):{success:!1,error:"Word not found"}}function m(){let e=0;return a.value.forEach((t,i)=>{t.retryScheduledAt&&(t.clearRetry(),a.value.set(i,t),e++)}),e>0&&c(),{success:!0,clearedCount:e}}function b(e,t,i){const n=new Date().toISOString().split("T")[0],l=f.value;l.cardsStudied++,i?l.newCards++:l.reviewCards++,e==="remember"?l.rememberedCards++:l.forgottenCards++;const O=l.rememberedCards+l.forgottenCards;l.averageResponseTime=(l.averageResponseTime*(O-1)+t)/O,r.value.set(n,l),I()}function F(){const e=new Date().toISOString().split("T")[0],t=new Date;t.setDate(t.getDate()-1);const i=t.toISOString().split("T")[0];s.value.lastStudyDate===i?s.value.currentStreak++:s.value.lastStudyDate!==e&&(s.value.currentStreak=1),s.value.lastStudyDate=e,s.value.longestStreak=Math.max(s.value.longestStreak,s.value.currentStreak),x()}function k(e){const t=a.value.get(e);return t?{wordId:e,reviewCount:t.reviewCount,successRate:t.successRate,difficulty:t.difficulty,status:t.status,lastReviewDate:t.lastReviewDate,nextReviewDate:t.nextReviewDate,currentInterval:t.currentInterval,easeFactor:t.easeFactor,daysSinceLastReview:t.daysSinceLastReview,reviewHistory:t.reviewHistory}:null}function N(e){if(a.value.has(e)){const t=o.createNew(e);return a.value.set(e,t),c(),{success:!0}}return{success:!1,error:"Word not found"}}function E(){const e=Array.from(a.value.values()).map(i=>i.toJSON()),t={version:"1.0.0",exportDate:new Date().toISOString(),progressEntries:e,dailyStats:Object.fromEntries(r.value),streakData:s.value};return JSON.stringify(t,null,2)}function T(e){try{const t=JSON.parse(e);return a.value.clear(),r.value.clear(),t.progressEntries&&t.progressEntries.forEach(i=>{const n=o.fromJSON(i);a.value.set(n.wordId,n)}),t.dailyStats&&Object.entries(t.dailyStats).forEach(([i,n])=>{r.value.set(i,n)}),t.streakData&&(s.value={...t.streakData},s.value.lastStudyDate&&(s.value.lastStudyDate=new Date(s.value.lastStudyDate))),W(),{success:!0,message:"Progress imported successfully"}}catch(t){return{success:!1,error:t.message}}}function c(){const e=Array.from(a.value.values()).map(t=>t.toJSON());localStorage.setItem("word-app-progress",JSON.stringify(e))}function I(){const e=Object.fromEntries(r.value);localStorage.setItem("word-app-daily-stats",JSON.stringify(e))}function x(){localStorage.setItem("word-app-streak",JSON.stringify(s.value))}function W(){c(),I(),x()}function P(){const e=JSON.parse(localStorage.getItem("word-app-progress")||"[]");a.value.clear(),e.forEach(n=>{const l=o.fromJSON(n);a.value.set(l.wordId,l)});const t=JSON.parse(localStorage.getItem("word-app-daily-stats")||"{}");r.value.clear(),Object.entries(t).forEach(([n,l])=>{r.value.set(n,l)});const i=localStorage.getItem("word-app-streak");if(i){const n=JSON.parse(i);s.value={...n,lastStudyDate:n.lastStudyDate?new Date(n.lastStudyDate):null}}}function J(){return a.value.clear(),r.value.clear(),s.value={currentStreak:0,longestStreak:0,lastStudyDate:null},localStorage.removeItem("word-app-progress"),localStorage.removeItem("word-app-daily-stats"),localStorage.removeItem("word-app-streak"),{success:!0,message:"All progress cleared"}}return{progressEntries:a,streakData:d(()=>s.value),getProgressForWord:u,getWordsByDifficulty:v,getDueCards:h,getRetryCards:g,getTodayStats:f,getOverallStats:y,initializeWordProgress:w,recordWordReview:D,scheduleWordRetry:S,skipRetryForWord:p,skipAllRetries:m,getWordStatistics:k,resetWordProgress:N,exportProgress:E,importProgress:T,loadFromPersistence:P,clearAllProgress:J}});export{L as P,$ as u};
